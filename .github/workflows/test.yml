name: Test

on:
  push:
  pull_request:
  schedule:
    - cron: 0 0 1 * * # monthly

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9, '3.10']
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install

      - name: Run pytest
        run: poetry run pytest

  testrun:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9, '3.10']
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install dependencies
        run: |
          sudo apt-get install singular-ui
          ./run.sh --help >/dev/null

      - name: Cache for Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('polybench/**/*.gradle*') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Cache for Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('polybench/**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      # NOTE: we don't cache the entire venv for the test purpose.

      - name: Cache for pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Cache for Poetry
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-

      - name: Cache for build
        uses: actions/cache@v2
        with:
          path: build
          key: ${{ runner.os }}-build-${{ hashFiles('polybench/**/*.gradle*', 'polybench/**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-build-

      - name: Build
        run: ./run.sh --build-only --color always --debug --all

      - name: Test run (nontrivial-gcd)
        run: ./run.sh --type nontrivial-gcd --max-nterms 5 --color always --debug --all

      - name: Test run (trivial-gcd)
        run: ./run.sh --type trivial-gcd --max-nterms 5 --color always --debug --all

      - name: Test run (nontrivial-factor)
        run: ./run.sh --type nontrivial-factor --max-nterms 5 --color always --debug --all

      - name: Test run (trivial-factor)
        run: ./run.sh --type trivial-factor --max-nterms 5 --color always --debug --all
