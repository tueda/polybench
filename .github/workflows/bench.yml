name: Bench

on:
  push:
  pull_request:
  schedule:
    - cron: 0 0 1 * * # monthly

jobs:
  bench:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        problem-type:
          - nontrivial-gcd
          - trivial-gcd
          - nontrivial-factor
          - trivial-factor
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install singular-ui

      - name: Cache for Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('polybench/**/*.gradle*') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Cache for Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('polybench/**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Get Python path
        id: get-python
        shell: bash
        run: echo "::set-output name=path::$(which python3)"

      - name: Cache for venv
        uses: actions/cache@v2
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ steps.get-python.outputs.path }}-${{ hashFiles('**/poetry.lock') }}
          # We can't use restore-keys because venv should contain all required packages, otherwise fails.

      - name: Cache for build
        uses: actions/cache@v2
        with:
          path: build
          key: ${{ runner.os }}-build-${{ hashFiles('polybench/**/*.gradle*', 'polybench/**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-build-

      - name: Build
        run: ./run.sh --build-only --color always --debug --all

      - name: Run benchmark
        run: ./run.sh --type ${{ matrix.problem-type }} --output-directory output-${{ matrix.problem-type }} --color always --all

      - name: Save results
        uses: actions/upload-artifact@v2
        with:
          path: output-*/
          if-no-files-found: error
